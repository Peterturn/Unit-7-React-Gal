{"ast":null,"code":"var _jsxFileName = \"/Users/petermay/Documents/GitHub/treehouse-projects/7-react_gallery_app-v1/gallery-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { apiKey } from './Key';\nimport axios from 'axios';\nimport SearchForm from './SearchForm';\nimport Nav from './Nav';\nimport Gallery from './Gallery';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.performSearch = query => {\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&page=1&format=json&nojsoncallback=1`).then(response => {\n        this.setState({\n          photos: response.data.photos.photo,\n          loading: false\n        });\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n    };\n\n    this.searchPuppy = (query = 'puppy') => {\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&page=1&format=json&nojsoncallback=1`).then(response => {\n        this.setState({\n          photos: response.data.photos.photo,\n          loading: false\n        });\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n    };\n\n    this.searchComputer = (query = 'computer') => {\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&page=1&format=json&nojsoncallback=1`).then(response => {\n        this.setState({\n          photos: response.data.photos.photo,\n          loading: false\n        });\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n    };\n\n    this.searchKitty = (query = 'kitty') => {\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&page=1&format=json&nojsoncallback=1`).then(response => {\n        this.setState({\n          photos: response.data.photos.photo,\n          loading: false\n        });\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n    };\n\n    this.state = {\n      photos: [],\n      Kitty: [],\n      Dog: [],\n      Computer: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.performSearch();\n    this.searchPuppy();\n    this.searchComputer();\n    this.searchKitty();\n  }\n\n  render() {\n    console.log(this.state.photos);\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchForm, {\n      onSearch: this.performSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Gallery, {\n        value: this.state.photos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 47\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/cat\",\n      render: () => /*#__PURE__*/React.createElement(Gallery, {\n        value: this.state.Kitty,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/petermay/Documents/GitHub/treehouse-projects/7-react_gallery_app-v1/gallery-app/src/App.js"],"names":["React","Component","apiKey","axios","SearchForm","Nav","Gallery","BrowserRouter","Route","Switch","App","constructor","performSearch","query","get","then","response","setState","photos","data","photo","loading","catch","error","console","log","searchPuppy","searchComputer","searchKitty","state","Kitty","Dog","Computer","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,aADF,EAEEC,KAFF,EAGEC,MAHF,QAIO,kBAJP;;AAOC,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC3BU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkBdC,aAlBc,GAkBIC,KAAF,IAAa;AAC3BV,MAAAA,KAAK,CAACW,GAAN,CAAW,6EAA4EZ,MAAO,SAASW,KAAO,kDAA9G,EACDE,IADC,CACIC,QAAQ,IAAI;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,QAAQ,CAACG,IAAT,CAAcD,MAAd,CAAqBE,KADjB;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OANC,EAOEC,KAPF,CAOQC,KAAK,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACC,OATF;AAUD,KA7Ba;;AAAA,SA+BdG,WA/Bc,GA+BA,CAAEb,KAAK,GAAG,OAAV,KAAuB;AACnCV,MAAAA,KAAK,CAACW,GAAN,CAAW,6EAA4EZ,MAAO,SAASW,KAAO,kDAA9G,EACDE,IADC,CACIC,QAAQ,IAAI;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,QAAQ,CAACG,IAAT,CAAcD,MAAd,CAAqBE,KADjB;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OANC,EAOEC,KAPF,CAOQC,KAAK,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACC,OATF;AAUD,KA1Ca;;AAAA,SA4CdI,cA5Cc,GA4CG,CAAEd,KAAK,GAAG,UAAV,KAA0B;AACzCV,MAAAA,KAAK,CAACW,GAAN,CAAW,6EAA4EZ,MAAO,SAASW,KAAO,kDAA9G,EACDE,IADC,CACIC,QAAQ,IAAI;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,QAAQ,CAACG,IAAT,CAAcD,MAAd,CAAqBE,KADjB;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OANC,EAOEC,KAPF,CAOQC,KAAK,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACC,OATF;AAUD,KAvDa;;AAAA,SAyDdK,WAzDc,GAyDA,CAAEf,KAAK,GAAG,OAAV,KAAuB;AACnCV,MAAAA,KAAK,CAACW,GAAN,CAAW,6EAA4EZ,MAAO,SAASW,KAAO,kDAA9G,EACDE,IADC,CACIC,QAAQ,IAAI;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,QAAQ,CAACG,IAAT,CAAcD,MAAd,CAAqBE,KADjB;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OANC,EAOEC,KAPF,CAOQC,KAAK,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACC,OATF;AAUD,KApEa;;AAEZ,SAAKM,KAAL,GAAa;AACXX,MAAAA,MAAM,EAAE,EADG;AAEXY,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,GAAG,EAAE,EAHM;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXX,MAAAA,OAAO,EAAE;AALE,KAAb;AAOD;;AAEDY,EAAAA,iBAAiB,GAAG;AAClB,SAAKrB,aAAL;AACA,SAAKc,WAAL;AACA,SAAKC,cAAL;AACA,SAAKC,WAAL;AACC;;AAsDHM,EAAAA,MAAM,GAAG;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWX,MAAvB;AACA,wBACG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKN,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAE,mBAAM,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWX,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,MAAM,EAAE,mBAAM,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAHF,CADD,CADH;AAcD;;AAvF0B;;AA0F7B,eAAepB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { apiKey } from './Key';\nimport axios from 'axios';\nimport SearchForm from './SearchForm';\nimport Nav from './Nav';\nimport Gallery from './Gallery';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n\n class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      photos: [],\n      Kitty: [],\n      Dog: [],\n      Computer: [],\n      loading: true\n    };\n  } \n\n  componentDidMount() {\n    this.performSearch();\n    this.searchPuppy();\n    this.searchComputer();\n    this.searchKitty();\n    }\n\n  performSearch = ( query ) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${ query }&per_page=24&page=1&format=json&nojsoncallback=1`)\n  .then(response => {\n    this.setState({\n      photos: response.data.photos.photo,\n      loading: false,\n    });\n  })\n     .catch(error => {\n     console.log('Error fetching and parsing data', error);\n     });\n  }\n\n  searchPuppy = ( query = 'puppy' ) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${ query }&per_page=24&page=1&format=json&nojsoncallback=1`)\n  .then(response => {\n    this.setState({\n      photos: response.data.photos.photo,\n      loading: false,\n    });\n  })\n     .catch(error => {\n     console.log('Error fetching and parsing data', error);\n     });\n  }\n\n  searchComputer = ( query = 'computer' ) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${ query }&per_page=24&page=1&format=json&nojsoncallback=1`)\n  .then(response => {\n    this.setState({\n      photos: response.data.photos.photo,\n      loading: false,\n    });\n  })\n     .catch(error => {\n     console.log('Error fetching and parsing data', error);\n     });\n  }\n  \n  searchKitty = ( query = 'kitty' ) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${ query }&per_page=24&page=1&format=json&nojsoncallback=1`)\n  .then(response => {\n    this.setState({\n      photos: response.data.photos.photo,\n      loading: false,\n    });\n  })\n     .catch(error => {\n     console.log('Error fetching and parsing data', error);\n     });\n  }\n\n  render (){\n    console.log(this.state.photos);\n    return (\n       <BrowserRouter>\n        <div className=\"container\">\n          <SearchForm onSearch={this.performSearch}/>\n          <Nav />\n          <Switch>\n          <Route exact path=\"/\" render={() => <Gallery value={this.state.photos}/>} />\n          <Route exact path=\"/cat\" render={() => <Gallery value={this.state.Kitty} />} />\n          \n         \n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}