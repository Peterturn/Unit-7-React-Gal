{"ast":null,"code":"var _jsxFileName = \"/Users/petermay/Documents/GitHub/treehouse-projects/7-react_gallery_app-v1/gallery-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport SearchForm from './SearchForm';\nimport Nav from './Nav';\nimport Gallery from './Gallery';\nimport { apiKey } from './Key';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      photos: [],\n      loading: true\n    };\n  }\n\n  componentDidMount(kitty) {\n    this.preformSearch();\n  }\n\n  preformSearch(query) {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&page=1&format=json&nojsoncallback=1`).then(response => {\n      this.setState({\n        photos: response.data.photos.photo,\n        loading: false\n      });\n    }).catch(error => {\n      console.log('Error fetching and parsing data', error);\n    });\n  }\n\n  render() {\n    console.log(this.state.photos);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchForm, {\n      onSearch: this.preformSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Gallery, {\n      value: this.state.photos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/petermay/Documents/GitHub/treehouse-projects/7-react_gallery_app-v1/gallery-app/src/App.js"],"names":["React","Component","axios","SearchForm","Nav","Gallery","apiKey","App","constructor","state","photos","loading","componentDidMount","kitty","preformSearch","query","get","then","response","setState","data","photo","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,MAAT,QAAuB,OAAvB;;AAEC,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC3BO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACvB,SAAKC,aAAL;AACC;;AAEHA,EAAAA,aAAa,CAACC,KAAD,EAAO;AAClBb,IAAAA,KAAK,CAACc,GAAN,CAAW,6EAA4EV,MAAO,SAAQS,KAAM,kDAA5G,EACDE,IADC,CACIC,QAAQ,IAAI;AAEhB,WAAKC,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAEQ,QAAQ,CAACE,IAAT,CAAcV,MAAd,CAAqBW,KADjB;AAEZV,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAPC,EAQEW,KARF,CAQQC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACC,KAVF;AAWD;;AAEDG,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,MAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKI,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAQD;;AArC0B;;AA0C7B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport SearchForm from './SearchForm';\nimport Nav from './Nav';\nimport Gallery from './Gallery';\n\nimport { apiKey } from './Key';\n\n class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      photos: [],\n      loading: true\n    };\n  } \n\n  componentDidMount(kitty) {\n    this.preformSearch()\n    }\n\n  preformSearch(query){\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&page=1&format=json&nojsoncallback=1`)\n  .then(response => {\n\n    this.setState({\n      photos: response.data.photos.photo,\n      loading: false,\n    });\n  })\n     .catch(error => {\n     console.log('Error fetching and parsing data', error);\n     });\n  }\n  \n  render (){\n    console.log(this.state.photos);\n    return (\n      <div className=\"container\">\n        <SearchForm onSearch={this.preformSearch}/>\n        <Nav />\n        <Gallery value={this.state.photos}/>\n\n      </div>\n    )\n  }\n    \n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}